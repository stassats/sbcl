name: Linux arm64

on: [push]

jobs:
  build:

    runs-on: ubuntu-24.04-arm
    timeout-minutes: 60
    strategy:
      matrix:
        options: ["", --with-nonstop-foreign-call]
        # subfeatures: ['']
        # include:
        #   - { subfeatures: fasteval, options: --with-sb-fasteval --without-sb-eval }

      fail-fast: false

    steps:
    - uses: actions/checkout@v1
    - name: install host sbcl
      run: |
        sudo apt-get -qq update | true
        sudo apt-get -qq install sbcl libcapstone-dev libzstd-dev

    - name: build
      env:
        SBCL_MAKE_TARGET_2_OPTIONS: --disable-ldb --disable-debugger
      run: ./make.sh ${{ matrix.options }} --with-sb-core-compression --xc-host='sbcl --dynamic-space-size 800MB --lose-on-corruption --disable-ldb --disable-debugger'
    - name: test-fasteval
      if: matrix.subfeatures == 'fasteval'
      run: cd tests; ./run-tests.sh --evaluator-mode interpret
    - name: make binary
      run: |
        name=sbcl-`cat version.lisp-expr | ./run-sbcl.sh --noinform --noprint --eval '(write-line (read))'`-linux-arm64
        mkdir sbcl-linux-binary-arm64${{ matrix.options }}
        cd ..
        mv sbcl $name
        ./$name/binary-distribution.sh $name
        bzip2 $name-binary.tar
        mv $name sbcl
        mv $name-binary.tar.bz2 sbcl/sbcl-linux-binary-arm64${{ matrix.options }}
    - name: save binary
      uses: actions/upload-artifact@v4
      with:
        name: sbcl-linux-binary-arm64${{ matrix.options }}
        path: sbcl-linux-binary-arm64${{ matrix.options }}

    - name: test
      run: cd tests; ./run-tests.sh --slow
    - name: ansi-test
      run: cd tests; ./ansi-tests.sh
